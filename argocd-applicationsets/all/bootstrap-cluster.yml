apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: init
  namespace: argocd
spec:
  generators:
    - clusters:
        selector:
          matchLabels:
            bootstrap: "true"
            version: "1.0"
  template:
    metadata:
      name: "{{name}}-init"
    spec:
      project: "{{metadata.labels.project}}"
      sources:
        # Create all required namespaces
        - repoURL: https://github.com/esnet/ma-infrastructure.git
          targetRevision: main
          path: manifest/bootstrap
        # Values file
        - repoURL: https://github.com/esnet/ma-infrastructure.git
          targetRevision: main
          ref: values
        # Cert Manager
        - repoURL: https://charts.jetstack.io
          chart: cert-manager
          targetRevision: v1.19.1
          helm:
            valueFiles:
              - $values/argocd-values/defaults/cert_manager.yml
        ## Secrets
        - repoURL: https://bitnami-labs.github.io/sealed-secrets
          chart: sealed-secrets
          targetRevision: 2.17.7
          helm:
            valueFiles:
              - $values/argocd-values/defaults/sealed-secrets.yml
            releaseName: sealed-secrets
        ## Prometheus
        # - repoURL: https://prometheus-community.github.io/helm-charts
        #   chart: kube-prometheus-stack
        #   targetRevision: 79.0.0
        #   helm:
        #     valueFiles:
        #       - $values/argocd-values/defaults/prometheus.yml
        #     releaseName: prometheus-stack
        # - repoURL: https://open-telemetry.github.io/opentelemetry-helm-charts
        #   chart: collector
        #   targetRevision: 0.138.0
        #   helm:
        #     valueFiles:
        #       - $values/argocd-values/defaults/prometheus.yml
        #     releaseName: collector

      destination:
        server: "{{server}}"
        namespace: cert-manager
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
